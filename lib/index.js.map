{"version":3,"sources":["../src/index.js"],"names":["init","console","log","chalk","green","figlet","textSync","horizontalLayout","verticalLayout","askQuestions","processAnswers","answers","other","questions","name","type","message","inquirer","prompt","process","cwd","createFiles","module","projectDir","shell","mkdir","files","touch","success","filepath","white","bgGreen","bold","run","MODULE","PROJECT_DIR"],"mappings":"AAAA;;;AACA;;AACA;;AACA;;AACA;;AAEA;;AACA;;;;;;;;AAEA,IAAMA,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjBC,EAAAA,OAAO,CAACC,GAAR,CACEC,kBAAMC,KAAN,CACEC,mBAAOC,QAAP,CAAgB,aAAhB,EAA+B;AAC7B;AACAC,IAAAA,gBAAgB,EAAE,SAFW;AAG7BC,IAAAA,cAAc,EAAE;AAHa,GAA/B,CADF,CADF;AASD,CAVD;;AAYA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzB,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,OAAO,EAAI;AAChC,QAAIA,OAAO,CAACC,KAAR,KAAkB,OAAtB,EAA+B;AAC7B,UAAMC,UAAS,GAAG,CAChB;AACEC,QAAAA,IAAI,EAAE,YADR;AAEEC,QAAAA,IAAI,EAAE,OAFR;AAGEC,QAAAA,OAAO,EAAE;AAHX,OADgB,CAAlB;AAOA,aAAOC,qBAASC,MAAT,CAAgBL,UAAhB,CAAP;AACD;;AACD,WAAO,IAAP;AACD,GAZD;;AAcA,MAAMA,SAAS,GAAG,CAChB;AACEC,IAAAA,IAAI,EAAE,QADR;AAEEC,IAAAA,IAAI,EAAE,OAFR;AAGEC,IAAAA,OAAO,EAAE;AAHX,GADgB,EAMhB;AACEF,IAAAA,IAAI,EAAE,aADR;AAEEC,IAAAA,IAAI,EAAE,OAFR;AAGEC,IAAAA,OAAO,EAAE,0BAHX;AAIE,eAASG,OAAO,CAACC,GAAR;AAJX,GANgB,CAAlB;AAaA,SAAOH,qBAASC,MAAT,CAAgBL,SAAhB,EAA2BH,cAA3B,CAAP;AACD,CA7BD;;AA+BA,IAAMW,WAAW,GAAG,SAAdA,WAAc,CAACC,MAAD,EAASC,UAAT,EAAwB;AAC1CC,sBAAMC,KAAN,CAAY,IAAZ,EAAkB,WAAIF,UAAJ,sBAA0BD,MAA1B,gBAAlB,EAD0C,CAE1C;AACA;AACA;AACA;AACA;;;AAEA,MAAMI,KAAK,GAAG,WACTH,UADS,sBACaD,MADb,cACuB,uBAAWA,MAAX,CADvB,yBAETC,UAFS,sBAEaD,MAFb,cAEuB,uBAAWA,MAAX,CAFvB,wBAGTC,UAHS,sBAGaD,MAHb,cAGuB,uBAAWA,MAAX,CAHvB,0BAITC,UAJS,sBAIaD,MAJb,wBAIiC,uBAC3CA,MAD2C,CAJjC,+BAOTC,UAPS,sBAOaD,MAPb,wBAOiC,uBAC3CA,MAD2C,CAPjC,qBAAd;;AAWAE,sBAAMG,KAAN,CAAYD,KAAZ;;AACA,iCAAcJ,MAAd,EAAsBC,UAAtB;AACA,SAAOG,KAAP;AACD,CAtBD;;AAwBA,IAAME,OAAO,GAAG,SAAVA,OAAU,CAAAC,QAAQ,EAAI;AAC1B5B,EAAAA,OAAO,CAACC,GAAR,CAAYC,kBAAM2B,KAAN,CAAYC,OAAZ,CAAoBC,IAApB,kCAAmDH,QAAnD,EAAZ;AACD,CAFD;;AAIA,IAAMI,GAAG;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AACV;AACAjC,YAAAA,IAAI,GAFM,CAIV;;AAJU;AAAA,mBAKYS,YAAY,EALxB;;AAAA;AAKJE,YAAAA,OALI;AAMFuB,YAAAA,MANE,GAMsBvB,OANtB,CAMFuB,MANE,EAMMC,WANN,GAMsBxB,OANtB,CAMMwB,WANN,EAQV;;AACAd,YAAAA,WAAW,CAACa,MAAD,EAASC,WAAT,CAAX,CATU,CAWV;;AACAP,YAAAA,OAAO,CAACO,WAAD,CAAP;;AAZU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAH;;AAAA,kBAAHF,GAAG;AAAA;AAAA;AAAA,GAAT;;AAeAA,GAAG","sourcesContent":["#!/usr/bin/env babel-node\nimport inquirer from 'inquirer';\nimport chalk from 'chalk';\nimport figlet from 'figlet';\nimport shell from 'shelljs';\n\nimport { capitalize } from './utils';\nimport loadTemplates from './loadTemplates';\n\nconst init = () => {\n  console.log(\n    chalk.green(\n      figlet.textSync('GraphQL CLI', {\n        // font: \"Ghost\",\n        horizontalLayout: 'default',\n        verticalLayout: 'default'\n      })\n    )\n  );\n};\n\nconst askQuestions = () => {\n  const processAnswers = answers => {\n    if (answers.other === 'Other') {\n      const questions = [\n        {\n          name: 'CUSTOM_DIR',\n          type: 'input',\n          message: 'Custom directory?'\n        }\n      ];\n      return inquirer.prompt(questions);\n    }\n    return null;\n  };\n\n  const questions = [\n    {\n      name: 'MODULE',\n      type: 'input',\n      message: 'What is the name of the graphql module?'\n    },\n    {\n      name: 'PROJECT_DIR',\n      type: 'input',\n      message: 'Directory of the project',\n      default: process.cwd()\n    }\n  ];\n  return inquirer.prompt(questions, processAnswers);\n};\n\nconst createFiles = (module, projectDir) => {\n  shell.mkdir('-p', [`${projectDir}/modules/${module}/mutations`]);\n  // modules/{module}/{module}Model.js\n  // modules/{module}/{module}Type.js\n  // modules/{module}/{module}Loader.js\n  // modules/{module}/mutations/{module}AddMutation.js\n  // modules/{module}/mutations/{module}EditMutation.js\n\n  const files = [\n    `${projectDir}/modules/${module}/${capitalize(module)}Model.ts`,\n    `${projectDir}/modules/${module}/${capitalize(module)}Type.ts`,\n    `${projectDir}/modules/${module}/${capitalize(module)}Loader.ts`,\n    `${projectDir}/modules/${module}/mutations/${capitalize(\n      module\n    )}AddMutation.js`,\n    `${projectDir}/modules/${module}/mutations/${capitalize(\n      module\n    )}EditMutation.js`\n  ];\n  shell.touch(files);\n  loadTemplates(module, projectDir);\n  return files;\n};\n\nconst success = filepath => {\n  console.log(chalk.white.bgGreen.bold(`Done! Files created at ${filepath}`));\n};\n\nconst run = async () => {\n  // show script introduction\n  init();\n\n  // ask questions\n  const answers = await askQuestions();\n  const { MODULE, PROJECT_DIR } = answers;\n\n  // create the file\n  createFiles(MODULE, PROJECT_DIR);\n\n  // show success message\n  success(PROJECT_DIR);\n};\n\nrun();\n"],"file":"index.js"}