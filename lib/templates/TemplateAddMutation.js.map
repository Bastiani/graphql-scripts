{"version":3,"sources":["../../src/templates/TemplateAddMutation.js"],"names":["mutation","name","inputFields","active","type","GraphQLBoolean","mutateAndGetPayload","args","TemplateModel","save","newTemplate","id","_id","error","outputFields","template","TemplateType","resolve","context","TemplateLoader","load","GraphQLString"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;AAEA;;AACA;;;;;;;;;;AAEA,IAAMA,QAAQ,GAAG,gDAA6B;AAC5CC,EAAAA,IAAI,EAAE,aADsC;AAE5CC,EAAAA,WAAW,EAAE;AACXC,IAAAA,MAAM,EAAE;AACNC,MAAAA,IAAI,EAAEC;AADA;AADG,GAF+B;AAO5CC,EAAAA,mBAAmB;AAAA;AAAA;AAAA,4BAAE,iBAAMC,IAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AACXJ,cAAAA,MADW,GACAI,IADA,CACXJ,MADW;AAAA;AAAA,qBAGO,IAAIK,yBAAJ,CAAkB;AAC1CL,gBAAAA,MAAM,EAANA;AAD0C,eAAlB,EAEvBM,IAFuB,EAHP;;AAAA;AAGbC,cAAAA,WAHa;AAAA,+CAOZ;AACLC,gBAAAA,EAAE,EAAED,WAAW,CAACE,GADX;AAELC,gBAAAA,KAAK,EAAE;AAFF,eAPY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,KAPyB;AAmB5CC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE;AACRX,MAAAA,IAAI,EAAEY,wBADE;AAERC,MAAAA,OAAO;AAAA;AAAA;AAAA,gCAAE,wBAAeV,IAAf,EAAqBW,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASP,kBAAAA,EAAT,QAASA,EAAT;AAAA;AAAA,yBACmBQ,cAAc,CAACC,IAAf,CAAoBF,OAApB,EAA6BP,EAA7B,CADnB;;AAAA;AACDD,kBAAAA,WADC;;AAAA,sBAGFA,WAHE;AAAA;AAAA;AAAA;;AAAA,oDAIE,IAJF;;AAAA;AAAA,oDAOAA,WAPA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAFC,KADE;AAaZG,IAAAA,KAAK,EAAE;AACLT,MAAAA,IAAI,EAAEiB,sBADD;AAELJ,MAAAA,OAAO,EAAE;AAAA,YAAGJ,KAAH,SAAGA,KAAH;AAAA,eAAeA,KAAf;AAAA;AAFJ;AAbK;AAnB8B,CAA7B,CAAjB;eAuCeb,Q","sourcesContent":["import { GraphQLBoolean, GraphQLString } from \"graphql\";\nimport { mutationWithClientMutationId } from \"graphql-relay\";\n\nimport TemplateModel from \"../TemplateModel\";\n\nimport * as TemplateLoader from \"../TemplateLoader\";\nimport TemplateType from \"../TemplateType\";\n\nconst mutation = mutationWithClientMutationId({\n  name: \"TemplateAdd\",\n  inputFields: {\n    active: {\n      type: GraphQLBoolean\n    }\n  },\n  mutateAndGetPayload: async args => {\n    const { active } = args;\n\n    const newTemplate = await new TemplateModel({\n      active\n    }).save();\n\n    return {\n      id: newTemplate._id,\n      error: null\n    };\n  },\n  outputFields: {\n    template: {\n      type: TemplateType,\n      resolve: async ({ id }, args, context) => {\n        const newTemplate = await TemplateLoader.load(context, id);\n\n        if (!newTemplate) {\n          return null;\n        }\n\n        return newTemplate;\n      }\n    },\n    error: {\n      type: GraphQLString,\n      resolve: ({ error }) => error\n    }\n  }\n});\n\nexport default mutation;\n"],"file":"TemplateAddMutation.js"}